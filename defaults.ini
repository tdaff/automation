# Program defaults for all available options
#
# !! DO NOT MODIFY !!
#
# This file will be overwritten in updates.
#
# Set customized options for the running environment
# in site.ini in the script directory, and job specific
# options in job.ini in the working directory.
#
# Acceptable boolean values (case-insensitive) are True,
# yes, on, 1 and False, no, off, 0


# Method for calculating charge. [str] {repeat, gulp}
charge_method = repeat
# Method to use for dft and/or optimization step. [str] {vasp, siesta}
dft_code = vasp
# Turn on empirical dispersion corrections in dft codes that
# support it. [bool]
dispersion = True
# Resolution, in Angstrom, of the esp grid. [float]
esp_resolution = 0.1889725989
# Source for the ESP. This will usually be the same as the dft_code,
# but not always. [str] {vasp, siesta}
esp_src = vasp
# Location of fastmc executable, must be the full path or be in the
# user's $PATH. [str]
fastmc_exe = fastmc
# Number of CPUs to run fastmc on. Make sure that you use the
# correct fastmc_exe for parallel runs. [int]
fastmc_ncpu = 1
# Guest(s) to use in GCMC. [str, list] {see guests.lib}
guests = CO2
# Location of GULP exe
gulp_exe = gulp
# Try to read in data from a previous calculation. [bool]
import = False
# Filetype for input structure file. [str] {pdb, cif}
initial_structure_format = pdb
# Enable interactive interface. [bool]
interactive = False
# Kpoint grid size for dft calculations. Ensure that gamma-point only
# exe is not used for >1 kpoint. [(int, int, int)]
kpoints = (1, 1, 1)
# Method to use for Monte Carlo calculations. [str] {fastmc}
mc_code = fastmc
# Potential cutoff to use in GCMC. This will also be used to determine
# the minimum supercell size. [float]
mc_cutoff = 12.5
# GCMC equilibration steps. [int]
mc_eq_steps = 1000000
# How often to write the fastmc history. [int]
mc_history_freq = 1000
# Add the 'jobcontrol' directive with fastmc so that GCMC must be
# stopped manually. [bool]
mc_jobcontrol = False
# How often to write the fastmc numguests. [int]
mc_numguests_freq = 1000
# GCMC pressure(s) (bar). For multiple pressure points and guests use
# nested lists ((g1p1, g2p1, ...), (g1p2, g2p2, ...), ...) [float, list]
mc_pressure = 1.0
# Turn on probability plots in GCMC. [bool]
mc_probability_plot = True
# GCMC production steps. [int]
mc_prod_steps = 10000000
# Supercell to use for GCMC. These values will only be used if the
# individual dimenstions are larger than the supercell calculated from
# the cutoff. [(int, int, int)]
mc_supercell = (1, 1, 1)
# Temperature(s) to use in GCMC (Kelvin). [float, list]
mc_temperature = 273
# Skip the charge calculation step; Charges will all be zero. [bool]
no_charges = False
# Skip the dft/optimization step; structure is not optimized and charge
# calculation may fail if it depends on this step. [bool]
no_dft = False
# Skip the gcmc step. [bool]
no_gcmc = False
# Do not submit jobs; just create input files. [bool]
no_submit = False
# Optimize positions of hydrogens in dft/optimization step. [bool]
optim_h = True
# Optimize all atom positions in dft/optimization step. [bool]
optim_all = False
# Optimize cell vectors in dft/optimization step. [bool]
optim_cell = False
# Location of VASP POTCARs; each element in a folder. [str]
potcar_dir = vasp_pseudopotentials/
# Location of siesta psf pseudopotentials. [str]
psf_dir = siesta_pseuodpotentials/
# Queuing system to use. [str] {wooki, sharcnet}
queue = wooki
# Silence stdout. This will be ignored here; set on commandline. [bool]
quiet = False
# Location of REPEAT executable. [str]
repeat_exe = repeat.x
# Cpus to use for REPEAT calculation. Ensure that repeat_exe points to a
# parallel version if using more than one CPU. [int]
repeat_ncpu = 1
# Run all the steps without stopping. [bool]
run_all = True
# Maximum memory that can be used for serial calculations (GB). [float]
serial_memory = 2.5
# General acucracy setting for siesta calcualtions. [str] {low, med, high}
siesta_accuracy = med
# Location of siesta executable. [str]
siesta_exe = siesta
# Number of CPUs to use for siesta. [str]
siesta_ncpu = 1
# Command to convert siesta ESP to .cube file. [str]
siesta_to_cube = siesta2repeat
# Turn on spin polarization in dft. [bool]
spin = False
# Codes that run with openmp threads, not mpi. [str, list]
threaded_codes = repeat
# Maximum memory to use for threaded calculations (GB). [float]
threaded_memory = 12
# Re-read options on restart. [bool]
update_opts = True
# Name (location) of vasp executable. [str]
vasp_exe = vasp
# Number of cpus to run vasp on. [int]
vasp_ncpu = 8
# Command to convert LOCPOT to .cube for REPEAT [str]
vasp_to_cube = vasp2cube 2
# Print debugging information. This will be ignored here; set on commandline.
verbose = False
